* 테스트 리포트 가시화 추가
  - workspace 내의 test 결과 출력되는 위치 확인
    : practice1 > projects > spring-app > build > test-results > test > TEST-com.fastcampus.demo.DemoApplicationTests.xml
  - 빌드후 조치 > Publish Junit test result report 추가 (설정하지 않아도 결과 출력됨)
    * Test report XMLs 에 **/test/TEST-*.xml (**/build/**/TEST-*.xml)추가
  - 빌드후 테스트 결과 확인
    : 테스트 커버리지 확인. 테스트 결과는 다음 파일에 기록.
    : practice1 > projects > spring-app > build > jacoco > test.exec

* 테스트 커버리지 가시화 추가
  - Jacoco 플러그인 추가
  - github 에 가서 projects/spring-app/build.gradle.kts 파일을 수정하여
    // jacoco 라는 부분을 uncomment
  - 빌드후 조치 > Record JaCoCo coverage report 추가
    - Path to source directories 의 **/src/main/java 를 **/src/main/kotlin 로 변경
  - 빌드후 커버리지 출력 결과 확인
    : 소스 코드가 어떤 건 실행되었고, 어떤 건 실행되지 않았음을 표시 해줌

* 정적분석 가시화 추가
  - Warnings Next Generation 플러그인 추가
    : 이것을 사용해서 kotlin을 통해 작성된 코드 스타일이 잘못된 것이 있는지를 확인하는 플러그인
    : 위 플러그인으로는 검색 안됨. Warnings 로 검색하고 이것을 추가하면 됨
    : 플러그인 추가후 아래 나오는 설정과정이 동일한 것으로 봐서 이름 변경이 된듯 함
  - github 에 가서 projects/spring-app/build.gradle 파일을 수정하여
    // import org.jlleitschuh.gradle.ktlint.reporter.ReporterType 와
    // configure<org.jlleitschuh.gradle.ktlint.KtlintExtension> 이후를 uncomment
  - 빌드후 조치 > Record compiler warnings and static analysis results 추가
    - Tool : ktlint (kotlin에서 쓰는 정적 코드분석 도구)
    - Report File Pattern : **/reports/ktlint/**/*.xml
    - 고급 > Enable recording for failed build 추가
  - 빌드후 정적분석 결과 확인
